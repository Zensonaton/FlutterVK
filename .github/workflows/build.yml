name: Windows & Android release

on:
  workflow_dispatch:
    inputs:
      android:
        type: boolean
        description: '–ë–∏–ª–¥ –¥–ª—è Android.'
        required: false
        default: true
      windows:
        type: boolean
        description: '–ë–∏–ª–¥ –¥–ª—è Windows.'
        required: false
        default: true
      telegram:
        type: boolean
        description: '–£–∫–∞–∑—ã–≤–∞–µ—Ç, –±—É–¥–µ—Ç –ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram-–∫–∞–Ω–∞–ª–µ.'
        required: false
        default: true
      create-release:
        type: boolean
        description: '–£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è Github Release.'
        required: false
        default: true
      pre-release:
        type: boolean
        description: '–£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–π Github Release –±—É–¥–µ—Ç –∏–º–µ—Ç—å –ø–ª–∞—à–∫—É pre-release.'
        required: false
        default: true
      debug:
        type: boolean
        description: '–ó–∞–ø—É—Å–∫ –¥–∞–Ω–Ω–æ–≥–æ Action —Å SSH-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±–∏–ª–¥ –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ—É–¥–∞—á–Ω—ã–º (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build_android:
    if: ${{ inputs.android }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java and Flutter for Android
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          flutter-version-file: pubspec.yaml

      - name: Get dependencies
        run: flutter pub get

      - name: Sign Android release
        run: |
          echo '${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}' | base64 --decode > android/app/upload-keystore.jks
          echo '${{ secrets.ANDROID_KEY_PROPERTIES }}' > android/key.properties

      - name: Build Android release
        run: |
          if [ "${{ inputs.pre-release }}" = "true" ]; then
            flutter build apk --release --dart-define PRERELEASE=1
          else
            flutter build apk --release
          fi
          cp ./build/app/outputs/flutter-apk/app-release.apk "./build/Flutter VK Android.apk"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Flutter VK Android.apk
          path: ./build/Flutter VK Android.apk
          retention-days: 3

      - name: Debug with SSH on fail
        if: ${{ failure() && inputs.debug }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  build_windows:
    if: ${{ inputs.windows }}
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: choco install yq

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          flutter-version-file: pubspec.yaml

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows release
        run: |
          if (${{ inputs.pre-release }} -eq 'true') {
            flutter build windows --release --dart-define PRERELEASE=1
          } else {
            flutter build windows --release
          }

      - name: Build installer and portable .7z archive
        shell: bash
        run: |
          echo "Creating portable 7z archive"
          "/c/Program Files/7-Zip/7z.exe" a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on "./build/Flutter VK portable.7z" "./build/Windows/x64/runner/Release/"

          echo "Downloading and installing Inno installer"
          make innoinstall

          echo "Creating Windows installer"
          make inno

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Flutter VK installer.exe
          path: ./build/Flutter VK installer.exe

          retention-days: 3

      - uses: actions/upload-artifact@v4
        with:
          name: Flutter VK portable.7z
          path: ./build/Flutter VK portable.7z

          retention-days: 3

      - name: Debug with SSH on fail
        if: ${{ failure() && inputs.debug }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  publish:
    runs-on: ubuntu-latest
    if: ${{ inputs.create-release || inputs.telegram }}
    needs: [build_android, build_windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: read-version
        uses: NiklasLehnfeld/flutter-version-number-action@main

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/
          merge-multiple: true

      - name: Publish in Telegram
        if: ${{ inputs.telegram }}
        shell: pwsh
        run: |
          $telegramToken = $env:TELEGRAM_TOKEN
          $telegramTo = $env:TELEGRAM_TO
          $isPreRelease = $env:PRERELEASE -eq "true"

          # Android
          Invoke-RestMethod -Uri "https://api.telegram.org/bot$telegramToken/sendDocument" -Method Post -Form @{
            chat_id = $telegramTo
            caption = $isPreRelease ? "<b>üöß –ù–æ–≤—ã–π –±–µ—Ç–∞-–±–∏–ª–¥ –¥–ª—è Android</b>.`n`n#Android #preRelease" : "<b>üöß –ù–æ–≤—ã–π –±–∏–ª–¥ –¥–ª—è Android</b>.`n`n#Android"
            parse_mode = 'HTML'
            document = Get-Item -Path './build/Flutter VK Android.apk'
          }

          # Windows installer
          Invoke-RestMethod -Uri "https://api.telegram.org/bot$telegramToken/sendDocument" -Method Post -Form @{
            chat_id = $telegramTo
            caption = $isPreRelease ? "<b>üöß –ù–æ–≤—ã–π –±–µ—Ç–∞-–±–∏–ª–¥ –¥–ª—è Windows</b>.`n`n#Windows #installer #preRelease" : "<b>üöß –ù–æ–≤—ã–π –±–∏–ª–¥ –¥–ª—è Windows</b>.`n`n#Windows #installer"
            parse_mode = 'HTML'
            document = Get-Item -Path './build/Flutter VK installer.exe'
          }

          # Windows portable
          Invoke-RestMethod -Uri "https://api.telegram.org/bot$telegramToken/sendDocument" -Method Post -Form @{
            chat_id = $telegramTo
            caption = $isPreRelease ? "<b>üöß –ù–æ–≤—ã–π –±–µ—Ç–∞-–±–∏–ª–¥ –¥–ª—è Windows</b>.`n`n#Windows #portable #preRelease" : "<b>üöß –ù–æ–≤—ã–π –±–∏–ª–¥ –¥–ª—è Windows</b>.`n`n#Windows #portable"
            parse_mode = 'HTML'
            document = Get-Item -Path './build/Flutter VK portable.7z'
          }
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
          PRERELEASE: ${{ inputs.pre-release }}

      - name: Create release
        if: ${{ inputs.create-release }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
          custom_tag: ${{ steps.read-version.outputs.version-number }}

      - name: Create a GitHub release
        if: ${{ inputs.create-release }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Flutter VK v${{ steps.tag_version.outputs.new_tag }}
          prerelease: ${{ inputs.pre-release }}
          bodyFile: CHANGELOG.md
          artifacts: "build/*.*"

      - name: Debug with SSH on fail
        if: ${{ failure() && inputs.debug }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
